#I followed this tutorial to learn the basics of java 3D
http://www.java3d.org/starting.html

#I excecuted the following commands to install java3D:
sudo apt-get install libjava3d-java
sudo cp /usr/share/java/j3d*.jar  /usr/lib/jvm/java-6-sun/jre/lib/ext/
#See following link for more information: 
http://ubuntuforums.org/showthread.php?t=1105627

#To get red cube tutorial to run I added the following external JARs to libraries in build path in my eclipse project
/usr/lib/jvm/java-6-sun/jre/lib/ext/j3dcore.jar
/usr/lib/jvm/java-6-sun/jre/lib/ext/j3dcore-1.5.2+dfsg.jar
/usr/lib/jvm/java-6-sun/jre/lib/ext/j3dutils.jar
/usr/lib/jvm/java-6-sun/jre/lib/ext/j3dutils-1.5.2+dfsg.jar
/usr/share/java/vecmath.jar
/usr/share/java/vecmath-1.5.2.jar

#I had some problem with vecmath and looked at this webpage:
http://stackoverflow.com/questions/4381291/import-javax-vecmath

#To get JavaDocs to work I followed these instruction:
http://stackoverflow.com/questions/9870448/how-to-attach-source-or-javadoc-in-eclipse-for-any-jar-file-e-g-javafx
#I added the following path in the javadoc location path (right click one of the added libraries and select properties): 
file:/usr/share/doc/libjava3d-java-doc/api/

#I also looked at this webpage but I don't remember if this was usefull... 
http://stackoverflow.com/questions/3386344/the-import-com-sun-javadoc-cannot-be-resolved-in-eclipse

#To be able to read the java docs without text and background colors messeing everything up, do the following:
-Install  GNOME Color Chooser
-Change the foreground and background colors for tooltips under the specific tab
#See http://askubuntu.com/questions/70599/how-to-change-tooltip-background-color-in-unity

#To be able to access old commands in the ubuntu terminal with up arrow using historical commands matching what you have started writing (python and matlab style), do the following:
-Create a file .inputrc in your home folder if it doesn't already exists.
-Add the following lines
"\e[B": history-search-forward
"\e[A": history-search-backward
-Restart terminal
#See http://stackoverflow.com/questions/1030182/how-do-i-change-bash-history-completion-to-complete-whats-already-on-the-line

---------------------------------------------------------------
Working:

Build:
javac -cp /usr/lib/jvm/java-6-sun/jre/lib/ext/j3dcore.jar:/usr/lib/jvm/java-6-sun/jre/lib/ext/j3dcore-1.5.2+dfsg.jar:/usr/lib/jvm/java-6-sun/jre/lib/ext/j3dutils.jar:/usr/lib/jvm/java-6-sun/jre/lib/ext/j3dutils-1.5.2+dfsg.jar:/usr/share/java/vecmath.jar:/usr/share/java/vecmath-1.5.2.jar:/usr/lib/jvm/java-6-sun/jre/lib/ext/j3d-contrib-utils.jar *.java -d ./build/

Go to folder
cd build

Run:
java -cp .:/usr/lib/jvm/java-6-sun/jre/lib/ext/j3dcore.jar:/usr/lib/jvm/java-6-sun/jre/lib/ext/j3dcore-1.5.2+dfsg.jar:/usr/lib/jvm/java-6-sun/jre/lib/ext/j3dutils.jar:/usr/lib/jvm/java-6-sun/jre/lib/ext/j3dutils-1.5.2+dfsg.jar:/usr/share/java/vecmath.jar:/usr/share/java/vecmath-1.5.2.jar:/usr/lib/jvm/java-6-sun/jre/lib/ext/j3d-contrib-utils.jar appartmentWithColladaApplet

---------------------------------------------------------------

Libs:
/usr/lib/jvm/java-6-sun/jre/lib/ext/j3dcore.jar
/usr/lib/jvm/java-6-sun/jre/lib/ext/j3dcore-1.5.2+dfsg.jar
/usr/lib/jvm/java-6-sun/jre/lib/ext/j3dutils.jar
/usr/lib/jvm/java-6-sun/jre/lib/ext/j3dutils-1.5.2+dfsg.jar
/usr/share/java/vecmath.jar
/usr/share/java/vecmath-1.5.2.jar
/usr/lib/jvm/java-6-sun/jre/lib/ext/j3d-contrib-utils.jar

Load collada files into java3d:
sudo apt-get install sweethome3d

or

Add external jar into libpath:
/usr/lib/jvm/java-6-sun/jre/lib/ext/j3d-contrib-utils.jar


-----------------------------------------------------
Running Applet from webpage:
Create MyWebpage.html in same folder as .class file.

MyWebpage.html:
<HTML>
 <HEAD>
 <TITLE>My First Java Applet</TITLE>
 </HEAD>
 <BODY>
 Here's my first Java Applet: <BR><BR>
 
 <applet code="FirstApplet.class" width="300" height ="300">
 
 </BODY>
 </HTML> 

Click file

See http://java.about.com/od/webapplications/ss/firstapplet.htm


Signing applet:
http://www-personal.umich.edu/~lsiden/tutorials/signed-applet/signed-applet.html
    keytool -genkey 
    keytool -selfcert

jarsigner F2jar.jar mykey, do this for all jar's, even the java 3d ones
Password or passphrase is to01zze

Java Web start (jnlp) tutorial:
http://www.mkyong.com/java/java-web-start-jnlp-tutorial-unofficial-guide/ 
Syntax : http://docs.oracle.com/javase/7/docs/technotes/guides/javaws/developersguide/syntax.html
http://localhost:8080/Test.jnlp


Debug java web start:
javaws -J-Xdebug -J-Xnoagent -J-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=8000 http://localhost:8080/appartment.jnlp

javaws -J-Xdebug -J-Xnoagent -J-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=8000 ./appartmentAll.jnlp

http://stackoverflow.com/questions/686061/how-can-i-debug-applications-under-java-web-start-jnlp


Tomcat server:
sudo apt-get install tomcat7
Copy jars and jnlp-file to /var/lib/tomcat7/webapps/ROOT
Start Tomcat: etc/init.d/tomcat7 start
See http://www.mkyong.com/tomcat/how-to-install-tomcat-in-ubuntu/

Setting java.library.path in code
http://blog.cedarsoft.com/2010/11/setting-java-library-path-programmatically/

System.setProperty( "java.library.path", workingDir + "l32:" + workingDir + "l64:" + workingDir + "w32:" + workingDir + "w32:" + workingDir + "w64:" + workingDir + "macosx");
		 
		java.lang.reflect.Field fieldSysPath;
		try {
			fieldSysPath = ClassLoader.class.getDeclaredField( "sys_paths" );
			fieldSysPath.setAccessible( true );
			try {
				fieldSysPath.set( null, null );
			} catch (IllegalArgumentException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (IllegalAccessException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		} catch (SecurityException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		} catch (NoSuchFieldException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
		
		
		System.out.println("LD Library Path:" + System.getProperty("java.library.path"));


